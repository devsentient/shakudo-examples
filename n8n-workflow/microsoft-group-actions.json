{
  "nodes": [
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/groups?$filter=securityEnabled eq true and mailEnabled eq true",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1180,
        980
      ],
      "id": "4a74eeed-cf58-4f4a-9826-e6f7b6b667d1",
      "name": "List Mail-enabled Security Groups",
      "credentials": {
        "microsoftOAuth2Api": {
          "id": "6x9VB7J7A2YOKk0H",
          "name": "Microsoft [CLOUDHQ TASK]"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/users",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1180,
        630
      ],
      "id": "818d80ed-7bde-4d15-83c6-5c398fd276c6",
      "name": "List Users1",
      "credentials": {
        "microsoftOAuth2Api": {
          "id": "6x9VB7J7A2YOKk0H",
          "name": "Microsoft [CLOUDHQ TASK]"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "id",
        "joinMode": "enrichInput1",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -740,
        730
      ],
      "id": "44f7ca15-4001-4a79-bc44-cdc4f067795d",
      "name": "Merge"
    },
    {
      "parameters": {
        "formTitle": "O365 Group Action",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Select Action",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "List Users"
                  },
                  {
                    "option": "Add User"
                  },
                  {
                    "option": "Remove User"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -1400,
        880
      ],
      "id": "54177d06-9355-4b6c-a7a1-a72bd44d93c5",
      "name": "On form submission1",
      "webhookId": "8f61ce4b-c8d8-497f-93dc-81f46acc60ef"
    },
    {
      "parameters": {
        "jsCode": "const members = items[0].json.value;\nreturn members.map(member => ({ json: member }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -960,
        630
      ],
      "id": "11f5fd96-b376-4df6-92bd-a2ecd01574a0",
      "name": "Code3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('On form submission1').item.json[\"Select Action\"] }}",
                    "rightValue": "List Users",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a8f225c0-9ce4-4d92-b419-57555ef85f34"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dc481d41-57c3-4079-89a0-0ef89e805df5",
                    "leftValue": "={{ $('On form submission1').item.json[\"Select Action\"] }}",
                    "rightValue": "Add User",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7e9df724-d54c-4122-8abe-a1ca93c39095",
                    "leftValue": "={{ $('On form submission1').item.json[\"Select Action\"] }}",
                    "rightValue": "Remove User",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -520,
        730
      ],
      "id": "019e5501-1566-4766-8651-3158c1fc21a5",
      "name": "Switch2"
    },
    {
      "parameters": {
        "resume": "form",
        "formTitle": "Users",
        "formDescription": "=",
        "formFields": {
          "values": [
            {
              "fieldType": "html",
              "elementName": "Users",
              "html": "<!-- Your custom HTML here --->\n{{ $json.userHtml }}\n\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -80,
        580
      ],
      "id": "a50f2dfa-11f2-4b72-9c08-5608fa73a2b3",
      "name": "Wait5",
      "webhookId": "04c810e8-43b5-4223-aaf2-4fec197651f8"
    },
    {
      "parameters": {
        "jsCode": "const data = items.map(item => item.json);\n\nlet html = `\n  <style>\n    .user-card {\n      border: 1px solid #ccc;\n      border-radius: 6px;\n      padding: 12px;\n      margin-bottom: 0;\n      background-color: #f9f9f9;\n      font-family: sans-serif;\n      border-bottom: 2px solid #ddd;\n      position: relative;\n    }\n    .user-card:last-child {\n      border-bottom: none;\n      margin-bottom: 12px;\n    }\n    .user-card h3 {\n      margin: 0 0 6px 0;\n      font-size: 16px;\n      color: #333;\n    }\n    .user-card p {\n      margin: 4px 0;\n      font-size: 14px;\n      color: #555;\n    }\n    .group-badge {\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      background-color: #28a745;\n      color: white;\n      padding: 2px 8px;\n      font-size: 12px;\n      border-radius: 4px;\n    }\n    .user-container {\n      max-width: 600px;\n      margin: auto;\n    }\n  </style>\n\n  <div class=\"user-container\">\n`;\n\nfor (const user of data) {\n  const email = user.mail || user.userPrincipalName || \"窶能";\n  const isMember = user.groupMember === true;\n\n  html += `\n    <div class=\"user-card\">\n      <h3>${user.displayName || \"窶能"}</h3>\n      <p><strong>Email:</strong> ${email}</p>\n      <p><strong>Group Member:</strong> ${isMember}</p>\n    </div>\n  `;\n}\n\nhtml += `</div>`;\n\nreturn [{ json: { userHtml: html, data: data } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        580
      ],
      "id": "e74e410e-598f-4e9c-8597-8949b771aba6",
      "name": "Code5"
    },
    {
      "parameters": {
        "jsCode": "const data = items.map(item => item.json);\n\n// Filter only users who are NOT group members (missing or false)\nconst nonMembers = data.filter(user => user.groupId == null);\n\nlet html = `\n  <style>\n    .user-card {\n      border: 1px solid #ccc;\n      border-radius: 6px;\n      padding: 12px;\n      margin-bottom: 0;\n      background-color: #f9f9f9;\n      font-family: sans-serif;\n      border-bottom: 2px solid #ddd;\n      position: relative;\n    }\n    .user-card:last-child {\n      border-bottom: none;\n      margin-bottom: 12px;\n    }\n    .user-card h3 {\n      margin: 0 0 6px 0;\n      font-size: 16px;\n      color: #333;\n    }\n    .user-card p {\n      margin: 4px 0;\n      font-size: 14px;\n      color: #555;\n    }\n    .non-member-badge {\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      background-color: #dc3545;\n      color: white;\n      padding: 2px 8px;\n      font-size: 12px;\n      border-radius: 4px;\n    }\n    .user-container {\n      max-width: 600px;\n      margin: auto;\n    }\n  </style>\n\n  <div class=\"user-container\">\n`;\n\nfor (const user of nonMembers) {\n  const email = user.mail || user.userPrincipalName || \"窶能";\n\n  html += `\n    <div class=\"user-card\">\n      <h3>${user.displayName || \"窶能"}</h3>\n      <p><strong>Email:</strong> ${email}</p>\n      <div class=\"non-member-badge\">Not in Group</div>\n    </div>\n  `;\n}\n\nhtml += `</div>`;\n\nreturn [{ json: { userHtml: html, data: nonMembers } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        780
      ],
      "id": "6f64a51c-7c87-4694-bd6d-eb0d97be830f",
      "name": "Code6"
    },
    {
      "parameters": {
        "jsCode": "const data = items.map(item => item.json);\n\n// Filter only users with groupMember: true\nconst members = data.filter(user => user.groupId != null);\n\nlet html = `\n  <style>\n    .user-card {\n      border: 1px solid #ccc;\n      border-radius: 6px;\n      padding: 12px;\n      margin-bottom: 0;\n      background-color: #f9f9f9;\n      font-family: sans-serif;\n      border-bottom: 2px solid #ddd;\n      position: relative;\n    }\n    .user-card:last-child {\n      border-bottom: none;\n      margin-bottom: 12px;\n    }\n    .user-card h3 {\n      margin: 0 0 6px 0;\n      font-size: 16px;\n      color: #333;\n    }\n    .user-card p {\n      margin: 4px 0;\n      font-size: 14px;\n      color: #555;\n    }\n    .group-badge {\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      background-color: #28a745;\n      color: white;\n      padding: 2px 8px;\n      font-size: 12px;\n      border-radius: 4px;\n    }\n    .user-container {\n      max-width: 600px;\n      margin: auto;\n    }\n  </style>\n\n  <div class=\"user-container\">\n`;\n\nfor (const user of members) {\n  const email = user.mail || user.userPrincipalName || \"窶能";\n  const groupName = user.groupDisplayName || \"-\";\n  \n  html += `\n    <div class=\"user-card\">\n      <h3>${user.displayName || \"窶能"}</h3>\n      <p><strong>Email:</strong> ${email}</p>\n      <p><strong>Group Name:</strong> ${groupName}</p>\n    </div>\n  `;\n}\n\nhtml += `</div>`;\n\nreturn [{ json: { userHtml: html, data: members } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        980
      ],
      "id": "3ee5578b-e23f-447f-a881-64f2a420dfbe",
      "name": "Code7"
    },
    {
      "parameters": {
        "resume": "form",
        "formTitle": "Users",
        "formDescription": "=",
        "formFields": {
          "values": [
            {
              "fieldType": "html",
              "elementName": "Users",
              "html": "<!-- Your custom HTML here --->\n{{ $json.userHtml }}\n\n"
            },
            {
              "fieldLabel": "Select a User",
              "placeholder": "Type a user窶冱 email",
              "requiredField": true
            },
            {
              "fieldType": "hiddenField",
              "fieldName": "=data",
              "fieldValue": "={{ JSON.stringify($json.data) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -80,
        780
      ],
      "id": "acbf962e-1dde-47be-8ce0-0060e0940a12",
      "name": "Wait6",
      "webhookId": "04c810e8-43b5-4223-aaf2-4fec197651f8"
    },
    {
      "parameters": {
        "resume": "form",
        "formTitle": "Users",
        "formDescription": "=",
        "formFields": {
          "values": [
            {
              "fieldType": "html",
              "elementName": "Users",
              "html": "<!-- Your custom HTML here --->\n{{ $json.userHtml }}\n\n"
            },
            {
              "fieldLabel": "Select a User",
              "placeholder": "Type a user窶冱 email",
              "requiredField": true
            },
            {
              "fieldType": "hiddenField",
              "fieldName": "=data",
              "fieldValue": "={{ JSON.stringify($json.data) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -80,
        980
      ],
      "id": "738df287-ce73-4371-af72-dc8baf57e646",
      "name": "Wait7",
      "webhookId": "04c810e8-43b5-4223-aaf2-4fec197651f8"
    },
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/groups/{{ $json.value[0].id }}/members\n",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -740,
        930
      ],
      "id": "96a0b027-6fcb-4212-9e7a-669464311a42",
      "name": "List Group Users",
      "credentials": {
        "microsoftOAuth2Api": {
          "id": "6x9VB7J7A2YOKk0H",
          "name": "Microsoft [CLOUDHQ TASK]"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -960,
        980
      ],
      "id": "67ec28b5-d17c-4c17-8cb4-e1b78bef3f51",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "const members = items[0].json.value;\n\n// Assuming groupInfo is a **single group object**, not an array\nconst groupInfo = $node[\"List Mail-enabled Security Groups\"].json.value[0];\n\n// Add groupId and groupDisplayName to each member\nreturn members.map(member => ({\n  json: {\n    ...member,\n    groupId: groupInfo.id,\n    groupDisplayName: groupInfo.displayName,\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -520,
        1055
      ],
      "id": "01c2cd25-cdda-4b55-af03-9dbe06eba57f",
      "name": "Code"
    }
  ],
  "connections": {
    "List Mail-enabled Security Groups": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Users1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission1": {
      "main": [
        [
          {
            "node": "List Users1",
            "type": "main",
            "index": 0
          },
          {
            "node": "List Mail-enabled Security Groups",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Wait7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Group Users": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "List Group Users",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "cc2ebcab3730b74928cd26e6e6d7edc0a37301ed83ca386e372268eab8db3b3f"
  }
}